// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PIOGHOASIS.Infraestructure.Data;

#nullable disable

namespace PIOGHOASIS.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250906074241_AddPasswordResetTokens")]
    partial class AddPasswordResetTokens
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PIOGHOASIS.Models.Departamento", b =>
                {
                    b.Property<int>("DepartamentoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DepartamentoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartamentoID"));

                    b.Property<bool>("Estado")
                        .HasColumnType("bit")
                        .HasColumnName("Estado");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Nombre");

                    b.Property<string>("PaisID")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("PaisID");

                    b.HasKey("DepartamentoID");

                    b.HasIndex("PaisID");

                    b.ToTable("DEPARTAMENTO", "dbo");
                });

            modelBuilder.Entity("PIOGHOASIS.Models.Empleado", b =>
                {
                    b.Property<string>("EmpleadoID")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("EmpleadoID");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit")
                        .HasColumnName("Estado");

                    b.Property<DateTime?>("FechaContratacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaContratacion");

                    b.Property<string>("PersonalID")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("PersonaID");

                    b.Property<string>("PuestoID")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("PuestoID");

                    b.HasKey("EmpleadoID");

                    b.HasIndex("PersonalID")
                        .IsUnique();

                    b.HasIndex("PuestoID");

                    b.ToTable("EMPLEADO", "dbo");
                });

            modelBuilder.Entity("PIOGHOASIS.Models.Entities.Usuario", b =>
                {
                    b.Property<string>("UsuarioID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte[]>("Contrasena")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("Contrasena");

                    b.Property<string>("EmpleadoID")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("RolID")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("UsuarioNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuarioID");

                    b.HasIndex("EmpleadoID")
                        .IsUnique();

                    b.HasIndex("RolID");

                    b.ToTable("USUARIO", "dbo");
                });

            modelBuilder.Entity("PIOGHOASIS.Models.Municipio", b =>
                {
                    b.Property<int>("MunicipioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MunicipioID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MunicipioID"));

                    b.Property<int>("DepartamentoID")
                        .HasColumnType("int")
                        .HasColumnName("DepartamentoID");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit")
                        .HasColumnName("Estado");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Nombre");

                    b.HasKey("MunicipioID");

                    b.HasIndex("DepartamentoID");

                    b.ToTable("MUNICIPIO", "dbo");
                });

            modelBuilder.Entity("PIOGHOASIS.Models.Pais", b =>
                {
                    b.Property<string>("PaisID")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("PaisID");

                    b.Property<int>("CodigoNumerico")
                        .HasColumnType("int")
                        .HasColumnName("CodigoNumerico");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit")
                        .HasColumnName("Estado");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Nombre");

                    b.HasKey("PaisID");

                    b.ToTable("PAIS", "dbo");
                });

            modelBuilder.Entity("PIOGHOASIS.Models.PasswordResetToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpiresAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestIp")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("TokenHash")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("UsedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserAgent")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("UsuarioID")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("ExpiresAtUtc");

                    b.HasIndex("UsuarioID", "TokenHash")
                        .IsUnique();

                    b.ToTable("PASSWORD_RESET_TOKENS", "dbo");
                });

            modelBuilder.Entity("PIOGHOASIS.Models.Persona", b =>
                {
                    b.Property<string>("PersonaID")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("PersonaID");

                    b.Property<string>("ApellidoCasada")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ApellidoCasada");

                    b.Property<int?>("DepartamentoID")
                        .HasColumnType("int")
                        .HasColumnName("DepartamentoID");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Direccion");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Email");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaNacimiento");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaRegistro");

                    b.Property<string>("FotoPath")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FotoPath");

                    b.Property<int?>("MunicipioID")
                        .HasColumnType("int")
                        .HasColumnName("MunicipioID");

                    b.Property<string>("Nit")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("Nit");

                    b.Property<string>("NumeroDocumento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("NumeroDocumento");

                    b.Property<string>("PaisID")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("PaisID");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PrimerApellido");

                    b.Property<string>("PrimerNombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PrimerNombre");

                    b.Property<string>("SegundoApellido")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SegundoApellido");

                    b.Property<string>("SegundoNombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SegundoNombre");

                    b.Property<string>("Telefono1")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasColumnName("Telefono1");

                    b.Property<string>("Telefono2")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasColumnName("Telefono2");

                    b.Property<string>("TipoDocumentoID")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("TipoDocumentoID");

                    b.HasKey("PersonaID");

                    b.ToTable("PERSONA", "dbo");
                });

            modelBuilder.Entity("PIOGHOASIS.Models.Puesto", b =>
                {
                    b.Property<string>("PuestoID")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("PuestoID");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("Descripcion");

                    b.Property<bool>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Estado");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Nombre");

                    b.HasKey("PuestoID");

                    b.ToTable("PUESTO", "dbo");
                });

            modelBuilder.Entity("PIOGHOASIS.Models.Rol", b =>
                {
                    b.Property<string>("RolID")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("RolID");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("Descripcion");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit")
                        .HasColumnName("Estado");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Nombre");

                    b.HasKey("RolID");

                    b.ToTable("ROL", "dbo");
                });

            modelBuilder.Entity("PIOGHOASIS.Models.TipoDocumento", b =>
                {
                    b.Property<string>("TipoDocumentoID")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("TipoDocumentoID");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit")
                        .HasColumnName("Estado");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Nombre");

                    b.HasKey("TipoDocumentoID");

                    b.ToTable("TIPO_DOCUMENTO", "dbo");
                });

            modelBuilder.Entity("PIOGHOASIS.Models.Departamento", b =>
                {
                    b.HasOne("PIOGHOASIS.Models.Pais", "Pais")
                        .WithMany("Departamentos")
                        .HasForeignKey("PaisID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("PIOGHOASIS.Models.Empleado", b =>
                {
                    b.HasOne("PIOGHOASIS.Models.Persona", "Persona")
                        .WithOne("Empleado")
                        .HasForeignKey("PIOGHOASIS.Models.Empleado", "PersonalID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PIOGHOASIS.Models.Puesto", "Puesto")
                        .WithMany("Empleados")
                        .HasForeignKey("PuestoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");

                    b.Navigation("Puesto");
                });

            modelBuilder.Entity("PIOGHOASIS.Models.Entities.Usuario", b =>
                {
                    b.HasOne("PIOGHOASIS.Models.Empleado", "Empleado")
                        .WithOne("Usuario")
                        .HasForeignKey("PIOGHOASIS.Models.Entities.Usuario", "EmpleadoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PIOGHOASIS.Models.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Empleado");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("PIOGHOASIS.Models.Municipio", b =>
                {
                    b.HasOne("PIOGHOASIS.Models.Departamento", "Departamento")
                        .WithMany()
                        .HasForeignKey("DepartamentoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamento");
                });

            modelBuilder.Entity("PIOGHOASIS.Models.PasswordResetToken", b =>
                {
                    b.HasOne("PIOGHOASIS.Models.Entities.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PIOGHOASIS.Models.Empleado", b =>
                {
                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PIOGHOASIS.Models.Pais", b =>
                {
                    b.Navigation("Departamentos");
                });

            modelBuilder.Entity("PIOGHOASIS.Models.Persona", b =>
                {
                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("PIOGHOASIS.Models.Puesto", b =>
                {
                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("PIOGHOASIS.Models.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
