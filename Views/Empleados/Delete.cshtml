@model PIOGHOASIS.Models.Empleado
@{
    if (ViewBag.IsPartial == true) { Layout = null; }

    var isActive = Model?.Estado == true;
    var accion = isActive ? "Desactivar" : "Reactivar";

    string NombreCompleto(params string?[] parts)
        => string.Join(" ", parts.Where(x => !string.IsNullOrWhiteSpace(x)));

    // Usa el endpoint Avatar de Empleados (ya lo tienes en el controller)
    var avatarSrc = $"/Empleados/Avatar/{Model?.EmpleadoID}";
}

<style>
    .usr-form {
        position: relative;
        margin-top: 0;
        width: 100%;
        min-height: calc(100vh - var(--header-h));
        padding: 24px;
        background: linear-gradient(rgba(255,255,255,.30),rgba(255,255,255,.30)),url('/img/dashboard/FondoDashboard.jpg') center/cover no-repeat #000;
    }

    .usr-card {
        background: rgba(255,255,255,.90);
        border: 1px solid rgba(0,0,0,.06);
        border-radius: .75rem;
        box-shadow: 0 6px 22px rgba(0,0,0,.08);
    }

    .usr-title {
        background: #f3c259;
        color: #222;
        font-weight: 800;
        font-size: 1.25rem;
        padding: .75rem 1rem;
        border-radius: .75rem .75rem 0 0;
    }

    .dl-row dt {
        font-weight: 700;
        color: #1f2a37;
    }

    .dl-row dd {
        color: #111827;
    }
</style>

<div class="usr-form">
    <div class="d-flex justify-content-end mb-2">
        <a class="btn btn-secondary ajax-nav" href="/Empleados/Index" data-url="/Empleados/Index">
            <i class="bi bi-arrow-left"></i> Volver a la lista
        </a>
    </div>

    <div class="usr-card">
        <div class="usr-title">@accion Empleado</div>

        <div class="p-3 p-md-4">
            <!-- Cabecera compacta como Clientes -->
            <div class="d-flex align-items-center mb-3">
                <img class="rounded me-3" style="width:56px;height:56px;object-fit:cover" src="@avatarSrc" alt="Avatar" />
                <div>
                    <div class="fw-bold">
                        @NombreCompleto(Model?.Persona?.PrimerNombre, Model?.Persona?.SegundoNombre, Model?.Persona?.PrimerApellido, Model?.Persona?.SegundoApellido)
                    </div>
                    <small class="text-muted">Código: @Model?.EmpleadoID</small>
                </div>
            </div>
            <hr />

            <!-- Todos los datos que mostrabas en tu Delete actual -->
            <dl class="row dl-row mb-3">
                <dt class="col-sm-3">Puesto</dt>
                <dd class="col-sm-9">@((Model?.Puesto?.Nombre ?? Model?.PuestoID) ?? "-")</dd>

                <dt class="col-sm-3">Fecha de creación</dt>
                <dd class="col-sm-9">@((Model?.Persona?.FechaRegistro)?.ToString("dd/MM/yyyy") ?? "-")</dd>

                <dt class="col-sm-3">Estado</dt>
                <dd class="col-sm-9">@((Model?.Estado ?? false) ? "Activo" : "Inactivo")</dd>

                <dt class="col-sm-3">No. Documento</dt>
                <dd class="col-sm-9">@(!string.IsNullOrWhiteSpace(Model?.Persona?.NumeroDocumento) ? Model.Persona.NumeroDocumento : "-")</dd>

                <dt class="col-sm-3">Correo electrónico</dt>
                <dd class="col-sm-9">@(!string.IsNullOrWhiteSpace(Model?.Persona?.Email) ? Model.Persona.Email : "-")</dd>
            </dl>

            <p>¿Seguro que deseas <strong>@accion.ToLower()</strong> este empleado?</p>

            <div class="mt-3">
                <a href="#" id="btnAsk" class="btn @(isActive ? "btn-danger" : "btn-success")">
                    <i class="bi @(isActive ? "bi-power" : "bi-check-circle")"></i> @accion
                </a>
                <a class="btn btn-outline-secondary ms-2 ajax-nav" href="/Empleados/Index" data-url="/Empleados/Index">Cancelar</a>
            </div>

            <form id="frmDelete" asp-action="ToggleEstado" asp-controller="Empleados" method="post" class="d-none" data-ajax="true">
                @Html.AntiForgeryToken()
                <input type="hidden" name="id" value="@Model?.EmpleadoID" />
            </form>
        </div>
    </div>
</div>

<!-- Modal de confirmación (igual patrón que Clientes) -->
<div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header @(isActive ? "bg-danger" : "bg-success") text-white py-2">
                <h6 class="modal-title mb-0">
                    <i class="bi bi-exclamation-triangle me-1"></i> Confirmar
                </h6>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body">
                ¿Deseas @accion.ToLower() al empleado <strong>
                    @NombreCompleto(Model?.Persona?.PrimerNombre, Model?.Persona?.PrimerApellido)
                </strong> (@Model?.EmpleadoID)?
            </div>
            <div class="modal-footer py-2">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" id="btnConfirm" class="btn @(isActive ? "btn-danger" : "btn-success")">@accion</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        (() => {
            const form = document.getElementById('frmDelete');
            const btnAsk = document.getElementById('btnAsk');
            const btnOk = document.getElementById('btnConfirm');
            const modalEl = document.getElementById('confirmDeleteModal');
            const modal = bootstrap.Modal.getOrCreateInstance(modalEl);

            btnAsk?.addEventListener('click', (e) => { e.preventDefault(); modal.show(); });

            form?.addEventListener('submit', async (ev) => {
                ev.preventDefault();
                const fd = new FormData(form);
                try {
                    const resp = await fetch(form.action, { method: 'POST', body: fd, headers: { 'X-Requested-With': 'XMLHttpRequest' } });
                    // Si el action devuelve Partial directamente, recargamos Index en el host
                    const host = window.parent?.document?.getElementById?.('contentHost') || document.getElementById('contentHost');
                    const hero = window.parent?.document?.getElementById?.('hero') || document.getElementById('hero');
                    const redirectUrl = '/Empleados/Index';
                    if (host) {
                        const htmlResp = await fetch(redirectUrl, { headers: { 'X-Requested-With': 'XMLHttpRequest' } });
                        const html = await htmlResp.text();
                        if (hero) hero.style.display = 'none';
                        host.innerHTML = html;
                        window.parent?.scrollTo?.(0, 0);
                    } else {
                        window.location.assign(redirectUrl);
                    }
                } catch {
                    window.location.assign('/Empleados/Index');
                }
            });

            btnOk?.addEventListener('click', () => {
                if (form.requestSubmit) form.requestSubmit(); else form.submit();
            });
        })();
    </script>
}
