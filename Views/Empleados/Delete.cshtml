@model PIOGHOASIS.Models.Empleado
@{
    Layout = null;

    var isActive   = Model?.Estado == true;
    var actionText = isActive ? "Desactivar" : "Activar";
    var question   = isActive
        ? $"¿Estás seguro que deseas desactivar al empleado {Model?.EmpleadoID}?"
        : $"¿Estás seguro que deseas activar al empleado {Model?.EmpleadoID}?";

    string NombreCompleto(params string?[] parts)
        => string.Join(" ", parts.Where(x => !string.IsNullOrWhiteSpace(x)));

    var fotoSrc = (Model?.Persona != null && !string.IsNullOrWhiteSpace(Model.Persona.FotoPath))
        ? Url.Content("~/" + Model.Persona.FotoPath)
        : Url.Content("~/img/DefaultUsuario.png");
}

<style>
    /* ===== Fondo y contenedor ===== */
    .puestos-details{
      position:relative;width:100%;
      min-height:calc(100vh - var(--header-h));
      padding:24px;
      background:
        linear-gradient(rgba(255,255,255,.30), rgba(255,255,255,.30)),
        url('/img/dashboard/FondoDashboard.jpg') center/cover no-repeat #000;
      overflow:hidden;
    }

    /* Tarjeta y encabezado (mismo Details Empleados) */
    .pd-card{background:rgba(255,255,255,.85);border:1px solid rgba(0,0,0,.06);
      border-radius:.75rem;box-shadow:0 8px 28px rgba(0,0,0,.08);backdrop-filter:blur(2px);}
    .pd-header{background:#f0a100;color:#1f2a37;font-weight:800;padding:.75rem 1rem;
      border-top-left-radius:.75rem;border-top-right-radius:.75rem;border-bottom:2px solid #d7a536;
      font-size:clamp(1.05rem,1.6vw,1.25rem);}
    .pd-field{padding:1rem .25rem;border-bottom:1px solid rgba(0,0,0,.08);}
    .pd-label{font-weight:800;color:#1f2a37;}
    .pd-value{color:#111827;}

    .pill{display:inline-block;padding:.15rem .5rem;border-radius:999px;font-size:.9rem;font-weight:700;border:1px solid transparent;}
    .pill-ok{background:#e8f7e9;color:#16803d;border-color:#bfe8c2;}
    .pill-off{background:#fff0f0;color:#b42318;border-color:#f5c2c7;}

    .pd-actions .btn-danger-soft{background:#fce2e2;color:#b42318;border:1px solid #f5c2c7;
      font-weight:800;padding:.7rem 1.25rem;box-shadow:0 10px 22px rgba(220,53,69,.15);}
    .pd-actions .btn-danger-soft:hover{filter:brightness(.98);}

    .pd-back{position:sticky;top:calc(var(--header-h) + 8px);z-index:2;display:inline-flex;align-items:center;gap:.35rem;
      background:#4b5563;color:#fff;border:none;border-radius:.5rem;padding:.45rem .85rem;text-decoration:none;
      box-shadow:0 4px 14px rgba(0,0,0,.15);}
    .pd-back:hover{filter:brightness(.95);color:#fff;}

    /* Foto (igual que Details Empleados) */
    .emp-photo-box{width:250px;height:250px;border-radius:.5rem;background:#fff;border:1px solid rgba(0,0,0,.08);
      box-shadow:0 4px 16px rgba(0,0,0,.06);overflow:hidden;display:flex;align-items:center;justify-content:center;}
    .emp-photo-box img{max-width:100%;max-height:100%;object-fit:contain;}

    /* print solo tarjeta */
    @@media print{
      body *{visibility:hidden;}
      #delCard,#delCard *{visibility:visible;}
      #delCard{position:fixed;inset:0;margin:0;}
    }
</style>

<div class="puestos-details">
    <!-- Volver -->
    <div class="d-flex justify-content-end mb-2">
        <a class="pd-back ajax-nav" href="/Empleados/Index" data-url="/Empleados/Index">
            <i class="bi bi-arrow-left"></i> Volver a la lista
        </a>
    </div>

    <div id="delCard" class="pd-card">
        <div class="pd-header">@question</div>

        <div class="p-3 p-md-4">
            <div class="row g-3">
                <!-- Datos a la izquierda -->
                <div class="col-12 col-lg-9">
                    <div class="pd-field row">
                        <div class="col-12 col-md-3 pd-label">Empleado:</div>
                        <div class="col-12 col-md-9 pd-value">
                            @NombreCompleto(Model?.Persona?.PrimerNombre, Model?.Persona?.SegundoNombre, Model?.Persona?.PrimerApellido, Model?.Persona?.SegundoApellido)
                            (@Model?.EmpleadoID)
                        </div>
                    </div>

                    <div class="pd-field row">
                        <div class="col-12 col-md-3 pd-label">Puesto:</div>
                        <div class="col-12 col-md-9 pd-value">@((Model?.Puesto?.Nombre ?? Model?.PuestoID) ?? "-")</div>
                    </div>

                    <div class="pd-field row">
                        <div class="col-12 col-md-3 pd-label">Fecha de creación:</div>
                        <div class="col-12 col-md-9 pd-value">@(Model?.Persona?.FechaRegistro?.ToString("dd/MM/yyyy") ?? "-")</div>
                    </div>

                    <div class="pd-field row">
                        <div class="col-12 col-md-3 pd-label">Estado:</div>
                        <div class="col-12 col-md-9 pd-value">
                            @(isActive ? Html.Raw("<span class='pill pill-ok'>Activo</span>")
                                       : Html.Raw("<span class='pill pill-off'>Inactivo</span>"))
                        </div>
                    </div>

                    <div class="pd-field row">
                        <div class="col-12 col-md-3 pd-label">No. Documento:</div>
                        <div class="col-12 col-md-9 pd-value">@(string.IsNullOrWhiteSpace(Model?.Persona?.NumeroDocumento) ? "-" : Model.Persona.NumeroDocumento)</div>
                    </div>

                    <div class="pd-field row" style="border-bottom:none;">
                        <div class="col-12 col-md-3 pd-label">Correo electrónico:</div>
                        <div class="col-12 col-md-9 pd-value">@(string.IsNullOrWhiteSpace(Model?.Persona?.Email) ? "-" : Model.Persona.Email)</div>
                    </div>

                    <div class="pd-actions mt-4 d-flex justify-content-center">
                        <form id="frmDelete" asp-action="ToggleEstado" data-ajax="true" method="post" class="m-0">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="id" value="@Model?.EmpleadoID" />
                            <button id="btnAsk" type="button" class="btn btn-danger-soft">
                                <i class="bi bi-trash3 me-1"></i> @actionText
                            </button>
                        </form>
                    </div>
                </div>

                <!-- Foto a la derecha -->
                <div class="col-12 col-lg-3 d-flex align-items-start justify-content-center justify-content-lg-end">
                    <div class="emp-photo-box">
                        <img src="@fotoSrc" alt="Foto del empleado" />
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal confirmación -->
<div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header bg-danger text-white py-2">
        <h6 class="modal-title mb-0">
          <i class="bi bi-exclamation-octagon me-1"></i> Confirmar @actionText
        </h6>
        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Cerrar"></button>
      </div>
      <div class="modal-body">
        @if (isActive){
            <span>Esta acción <strong>desactivará</strong> al empleado <strong>@Model?.EmpleadoID</strong>. ¿Deseas continuar?</span>
        } else {
            <span>Esta acción <strong>activará</strong> al empleado <strong>@Model?.EmpleadoID</strong>. ¿Deseas continuar?</span>
        }
      </div>
      <div class="modal-footer py-2">
        <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancelar</button>
        <button type="button" class="btn btn-danger" id="btnConfirm">
            <i class="bi bi-trash3 me-1"></i> @actionText
        </button>
      </div>
    </div>
  </div>
</div>

@section Scripts {
<script>
(() => {
  const form     = document.getElementById('frmDelete');
  const btnAsk   = document.getElementById('btnAsk');
  const btnOk    = document.getElementById('btnConfirm');
  const modalEl  = document.getElementById('confirmDeleteModal');
  const modal    = bootstrap.Modal.getOrCreateInstance(modalEl);

  btnAsk?.addEventListener('click', () => modal.show());

  // Intercepta el submit y lo envía por fetch para soportar Dashboard (#contentHost) o navegación normal
  form?.addEventListener('submit', async (ev) => {
    ev.preventDefault();
    const fd = new FormData(form);

    try {
      const resp = await fetch(form.action, {
        method: 'POST',
        body: fd,
        headers: { 'X-Requested-With': 'XMLHttpRequest' }
      });

      // Puede venir JSON con redirectUrl (EmpleadosController.ToggleEstado)
      let data;
      try { data = await resp.json(); } catch { data = null; }

      const redirectUrl = data?.redirectUrl || '/Empleados/Index';
      const host = window.parent?.document?.getElementById?.('contentHost') || document.getElementById('contentHost');
      const hero = window.parent?.document?.getElementById?.('hero') || document.getElementById('hero');

      if (host) {
        const htmlResp = await fetch(redirectUrl, { headers: { 'X-Requested-With': 'XMLHttpRequest' } });
        const html = await htmlResp.text();
        if (hero) hero.style.display = 'none';
        host.innerHTML = html;
        window.parent?.scrollTo?.(0,0);
      } else {
        window.location.assign(redirectUrl);
      }
    } catch (e) {
      // Fallback: redirect duro
      window.location.assign('/Empleados/Index');
    }
  });

  btnOk?.addEventListener('click', () => {
    if (form.requestSubmit) form.requestSubmit();
    else form.submit();
  });
})();
</script>
}
